head	1.4;
access;
symbols;
locks;
comment	@# @;


1.4
date	2018.04.11.23.31.36;	author -;	state -;
branches;
next	1.3;

1.3
date	2016.09.24.01.23.20;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.09.24.00.11.09;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.01.20.01.13.35;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@#!/afs/cats.ucsc.edu/courses/cmps112-wm/usr/racket/bin/mzscheme -qr
;; $Id: sbi.scm,v 1.3 2016-09-23 18:23:20-07 - - $
;;
;; NAME
;;    sbi.scm - silly basic interpreter
;;
;; SYNOPSIS
;;    sbi.scm filename.sbir
;;
;; DESCRIPTION
;;    The file mentioned in argv[1] is read and assumed to be an SBIR
;;    program, which is the executed.  Currently it is only printed.
;;

(define *stdin* (current-input-port))
(define *stdout* (current-output-port))
(define *stderr* (current-error-port))

(define *run-file*
    (let-values
        (((dirpath basepath root?)
            (split-path (find-system-path 'run-file))))
        (path->string basepath))
)

(define (die list)
    (for-each (lambda (item) (display item *stderr*)) list)
    (newline *stderr*)
    (exit 1)
)

(define (usage-exit)
    (die `("Usage: " ,*run-file* " filename"))
)

(define (readlist-from-inputfile filename)
    (let ((inputfile (open-input-file filename)))
         (if (not (input-port? inputfile))
             (die `(,*run-file* ": " ,filename ": open failed"))
             (let ((program (read inputfile)))
                  (close-input-port inputfile)
                         program))))

(define (write-program-by-line filename program)
    (printf "==================================================~n")
    (printf "~a: ~s~n" *run-file* filename)
    (printf "==================================================~n")
    (printf "(~n")
    (map (lambda (line) (printf "~s~n" line)) program)
    (printf ")~n"))

(define (main arglist)
    (if (or (null? arglist) (not (null? (cdr arglist))))
        (usage-exit)
        (let* ((sbprogfile (car arglist))
               (program (readlist-from-inputfile sbprogfile)))
              (write-program-by-line sbprogfile program))))

(when (terminal-port? *stdin*)
      (main (vector->list (current-command-line-arguments))))
@


1.3
log
@-
@
text
@d2 1
a2 1
;; $Id: sbi.scm,v 1.2 2015-09-23 17:11:09-07 - - $
d15 2
d59 2
a60 1
(main (vector->list (current-command-line-arguments)))
@


1.2
log
@-
@
text
@d2 1
a2 1
;; $Id: sbi.scm,v 1.1 2012-01-19 17:13:35-08 - - $
d11 2
a12 3
;;    The file mentioned in argv[1] is read and assumed to be an
;;    SBIR program, which is the executed.  Currently it is only
;;    printed.
a57 1

@


1.1
log
@-
@
text
@d1 2
a2 2
#!/afs/cats.ucsc.edu/courses/cmps112-wm/usr/racket-5.1/bin/mzscheme -qr
;; $Id: sbi.scm,v 1.1 2011-04-08 20:17:51-07 - - $
@
