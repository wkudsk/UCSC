%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Listing.ps
%%For: Wesley Mackey
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Tue Oct 16 14:00:41 2018
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier-Bold /F-gs-font MF
/F-gs-font 11 11 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript-mycolor 1.6 6
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def
/HeaderPageCountF /Helvetica-Bold findfont 18 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    /dhw d_header_w 4 sub def

    /linecolor {0 0 0 setrgbcolor} bind def  % line color
    /txcolor   {0 0 0 setrgbcolor} bind def  % text color
    /fncolor   {0 0 0 setrgbcolor} bind def  % filename line color

    .5 setlinewidth

    % line across bottom of the header area
    linecolor
    0 0 moveto dhw 0 lineto

    % side boxes
    /sbw d_header_h 2 mul def	% side box width

    % left side box
    0 0 sbw d_header_h Box
    linecolor
    stroke

    % date/time in left box
    txcolor
    HeaderDateF setfont
    moddatestr dup stringwidth pop sbw exch sub 2 div
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop sbw exch sub 2 div
    d_header_h 5 div moveto show

    % right side box
    dhw sbw sub 0 sbw d_header_h Box
    linecolor
    stroke

    % get width of pagecount
    HeaderPageCountF setfont
    pagecountstr stringwidth pop

    txcolor
    HeaderPageNumF setfont
    pagenumstr stringwidth pop add  % add to width of pagecount
    sbw exch sub 2 div dhw sbw sub add
    d_header_h .2 mul moveto

    pagenumstr show

    HeaderPageCountF setfont
    pagecountstr show

    % filename
    fncolor
    HeaderHDRF setfont
    dhw fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % HACK around a bug in enscript 1.6.0:
      % for some reason this is getting set to "(null)" and
      %
      user_header_center_str (\(null\)) eq {
        /user_header_center_str () def
      } if

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        dhw user_header_left_str stringwidth pop sub 2 div
        h moveto user_header_left_str show
      } {
        sbw 5 add h moveto user_header_left_str show

        dhw user_header_center_str stringwidth pop sub 2 div
        h moveto user_header_center_str show

	dhw sbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} bind def
%%EndResource
/d_page_w 536 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 708 def
/d_header_w 536 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 536 def
/d_footer_h 0 def
/d_output_w 536 def
/d_output_h 708 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (bigint.mli) def
/fdir (.) def
/ftail (bigint.mli) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/16/18) def
/pagecountstr (/1) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(\(* $Id: bigint.mli,v 1.1 2011-04-26 13:39:18-07 - - $ *\)) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(module Bigint : sig) s
32.4 658 M (4:) s
52.2 658 M
(   type bigint) s
32.4 646 M (5:) s
52.2 646 M
(   val bigint_of_string : string -> bigint) s
32.4 634 M (6:) s
52.2 634 M
(   val string_of_bigint : bigint -> string) s
32.4 622 M (7:) s
52.2 622 M
(   val add : bigint -> bigint -> bigint) s
32.4 610 M (8:) s
52.2 610 M
(   val sub : bigint -> bigint -> bigint) s
32.4 598 M (9:) s
52.2 598 M
(   val mul : bigint -> bigint -> bigint) s
25.8 586 M (10:) s
52.2 586 M
(   val div : bigint -> bigint -> bigint) s
25.8 574 M (11:) s
52.2 574 M
(   val rem : bigint -> bigint -> bigint) s
25.8 562 M (12:) s
52.2 562 M
(   val pow : bigint -> bigint -> bigint) s
25.8 550 M (13:) s
52.2 550 M
(   val zero : bigint) s
25.8 538 M (14:) s
52.2 538 M
(end) s
25.8 526 M (15:) s
_R
S
%%Page: (1) 2
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (bigint.ml) def
/fdir (.) def
/ftail (bigint.ml) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/16/18) def
/pagecountstr (/2) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(\(* $Id: bigint.ml,v 1.5 2014-11-11 15:06:24-08 - - $ *\)) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(open Printf) s
32.4 658 M (4:) s
32.4 646 M (5:) s
52.2 646 M
(module Bigint = struct) s
32.4 634 M (6:) s
32.4 622 M (7:) s
52.2 622 M
(    type sign     = Pos | Neg) s
32.4 610 M (8:) s
52.2 610 M
(    type bigint   = Bigint of sign * int list) s
32.4 598 M (9:) s
52.2 598 M
(    let  radix    = 10) s
25.8 586 M (10:) s
52.2 586 M
(    let  radixlen =  1) s
25.8 574 M (11:) s
25.8 562 M (12:) s
52.2 562 M
(    let car       = List.hd) s
25.8 550 M (13:) s
52.2 550 M
(    let cdr       = List.tl) s
25.8 538 M (14:) s
52.2 538 M
(    let map       = List.map) s
25.8 526 M (15:) s
52.2 526 M
(    let reverse   = List.rev) s
25.8 514 M (16:) s
52.2 514 M
(    let strcat    = String.concat) s
25.8 502 M (17:) s
52.2 502 M
(    let strlen    = String.length) s
25.8 490 M (18:) s
52.2 490 M
(    let strsub    = String.sub) s
25.8 478 M (19:) s
52.2 478 M
(    let zero      = Bigint \(Pos, []\)) s
25.8 466 M (20:) s
25.8 454 M (21:) s
52.2 454 M
(    let charlist_of_string str = ) s
25.8 442 M (22:) s
52.2 442 M
(        let last = strlen str - 1) s
25.8 430 M (23:) s
52.2 430 M
(        in  let rec charlist pos result =) s
25.8 418 M (24:) s
52.2 418 M
(            if pos < 0) s
25.8 406 M (25:) s
52.2 406 M
(            then result) s
25.8 394 M (26:) s
52.2 394 M
(            else charlist \(pos - 1\) \(str.[pos] :: result\)) s
25.8 382 M (27:) s
52.2 382 M
(        in  charlist last []) s
25.8 370 M (28:) s
25.8 358 M (29:) s
52.2 358 M
(    let bigint_of_string str =) s
25.8 346 M (30:) s
52.2 346 M
(        let len = strlen str) s
25.8 334 M (31:) s
52.2 334 M
(        in  let to_intlist first =) s
25.8 322 M (32:) s
52.2 322 M
(                let substr = strsub str first \(len - first\) in) s
25.8 310 M (33:) s
52.2 310 M
(                let digit char = int_of_char char - int_of_char '0' in) s
25.8 298 M (34:) s
52.2 298 M
(                map digit \(reverse \(charlist_of_string substr\)\)) s
25.8 286 M (35:) s
52.2 286 M
(            in  if   len = 0) s
25.8 274 M (36:) s
52.2 274 M
(                then zero) s
25.8 262 M (37:) s
52.2 262 M
(                else if   str.[0] = '_') s
25.8 250 M (38:) s
52.2 250 M
(                     then Bigint \(Neg, to_intlist 1\)) s
25.8 238 M (39:) s
52.2 238 M
(                     else Bigint \(Pos, to_intlist 0\)) s
25.8 226 M (40:) s
25.8 214 M (41:) s
52.2 214 M
(    let string_of_bigint \(Bigint \(sign, value\)\) =) s
25.8 202 M (42:) s
52.2 202 M
(        match value with) s
25.8 190 M (43:) s
52.2 190 M
(        | []    -> "0") s
25.8 178 M (44:) s
52.2 178 M
(        | value -> let reversed = reverse value) s
25.8 166 M (45:) s
52.2 166 M
(                   in  strcat "") s
25.8 154 M (46:) s
52.2 154 M
(                       \(\(if sign = Pos then "" else "-"\) ::) s
25.8 142 M (47:) s
52.2 142 M
(                        \(map string_of_int reversed\)\)) s
_R
S
%%Page: (2) 3
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (bigint.ml) def
/fdir (.) def
/ftail (bigint.ml) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/16/18) def
/pagecountstr (/2) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (48:) s
25.8 682 M (49:) s
52.2 682 M
(    let rec add' list1 list2 carry = match \(list1, list2, carry\) with) s
25.8 670 M (50:) s
52.2 670 M
(        | list1, [], 0       -> list1) s
25.8 658 M (51:) s
52.2 658 M
(        | [], list2, 0       -> list2) s
25.8 646 M (52:) s
52.2 646 M
(        | list1, [], carry   -> add' list1 [carry] 0) s
25.8 634 M (53:) s
52.2 634 M
(        | [], list2, carry   -> add' [carry] list2 0) s
25.8 622 M (54:) s
52.2 622 M
(        | car1::cdr1, car2::cdr2, carry ->) s
25.8 610 M (55:) s
52.2 610 M
(          let sum = car1 + car2 + carry) s
25.8 598 M (56:) s
52.2 598 M
(          in  sum mod radix :: add' cdr1 cdr2 \(sum / radix\)) s
25.8 586 M (57:) s
25.8 574 M (58:) s
52.2 574 M
(    let add \(Bigint \(neg1, value1\)\) \(Bigint \(neg2, value2\)\) =) s
25.8 562 M (59:) s
52.2 562 M
(        if neg1 = neg2) s
25.8 550 M (60:) s
52.2 550 M
(        then Bigint \(neg1, add' value1 value2 0\)) s
25.8 538 M (61:) s
52.2 538 M
(        else zero) s
25.8 526 M (62:) s
25.8 514 M (63:) s
52.2 514 M
(    let sub = add) s
25.8 502 M (64:) s
25.8 490 M (65:) s
52.2 490 M
(    let mul = add) s
25.8 478 M (66:) s
25.8 466 M (67:) s
52.2 466 M
(    let div = add) s
25.8 454 M (68:) s
25.8 442 M (69:) s
52.2 442 M
(    let rem = add) s
25.8 430 M (70:) s
25.8 418 M (71:) s
52.2 418 M
(    let pow = add) s
25.8 406 M (72:) s
25.8 394 M (73:) s
52.2 394 M
(end) s
25.8 382 M (74:) s
_R
S
%%Page: (1) 4
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (maindc.ml) def
/fdir (.) def
/ftail (maindc.ml) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/16/18) def
/pagecountstr (/2) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(\(* $Id: maindc.ml,v 1.5 2017-04-07 13:24:41-07 - - $ *\)) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(include Scanner) s
32.4 658 M (4:) s
52.2 658 M
(include Bigint) s
32.4 646 M (5:) s
32.4 634 M (6:) s
52.2 634 M
(open Bigint) s
32.4 622 M (7:) s
52.2 622 M
(open Printf) s
32.4 610 M (8:) s
52.2 610 M
(open Scanner) s
32.4 598 M (9:) s
25.8 586 M (10:) s
52.2 586 M
(type stack_t = Bigint.bigint Stack.t) s
25.8 574 M (11:) s
52.2 574 M
(let push = Stack.push) s
25.8 562 M (12:) s
52.2 562 M
(let pop = Stack.pop) s
25.8 550 M (13:) s
25.8 538 M (14:) s
52.2 538 M
(let ord thechar = int_of_char thechar) s
25.8 526 M (15:) s
52.2 526 M
(type binop_t = bigint -> bigint -> bigint) s
25.8 514 M (16:) s
25.8 502 M (17:) s
52.2 502 M
(let print_number number = printf "%s\\n%!" \(string_of_bigint number\)) s
25.8 490 M (18:) s
25.8 478 M (19:) s
52.2 478 M
(let print_stackempty \(\) = printf "stack empty\\n%!") s
25.8 466 M (20:) s
25.8 454 M (21:) s
52.2 454 M
(let executereg \(thestack: stack_t\) \(oper: char\) \(reg: int\) =) s
25.8 442 M (22:) s
52.2 442 M
(    try match oper with) s
25.8 430 M (23:) s
52.2 430 M
(        | 'l' -> printf "operator l reg 0%o is unimplemented\\n%!" reg) s
25.8 418 M (24:) s
52.2 418 M
(        | 's' -> printf "operator s reg 0%o is unimplemented\\n%!" reg) s
25.8 406 M (25:) s
52.2 406 M
(        | _   -> printf "0%o 0%o is unimplemented\\n%!" \(ord oper\) reg) s
25.8 394 M (26:) s
52.2 394 M
(    with Stack.Empty -> print_stackempty\(\)) s
25.8 382 M (27:) s
25.8 370 M (28:) s
52.2 370 M
(let executebinop \(thestack: stack_t\) \(oper: binop_t\) =) s
25.8 358 M (29:) s
52.2 358 M
(    try let right = pop thestack) s
25.8 346 M (30:) s
52.2 346 M
(        in  try let left = pop thestack) s
25.8 334 M (31:) s
52.2 334 M
(                in  push \(oper left right\) thestack) s
25.8 322 M (32:) s
52.2 322 M
(            with Stack.Empty -> \(print_stackempty \(\);) s
25.8 310 M (33:) s
52.2 310 M
(                                 push right thestack\)) s
25.8 298 M (34:) s
52.2 298 M
(    with Stack.Empty -> print_stackempty \(\)) s
25.8 286 M (35:) s
25.8 274 M (36:) s
52.2 274 M
(let execute \(thestack: stack_t\) \(oper: char\) =) s
25.8 262 M (37:) s
52.2 262 M
(    try match oper with) s
25.8 250 M (38:) s
52.2 250 M
(        | '+'  -> executebinop thestack Bigint.add) s
25.8 238 M (39:) s
52.2 238 M
(        | '-'  -> executebinop thestack Bigint.sub) s
25.8 226 M (40:) s
52.2 226 M
(        | '*'  -> executebinop thestack Bigint.mul) s
25.8 214 M (41:) s
52.2 214 M
(        | '/'  -> executebinop thestack Bigint.div) s
25.8 202 M (42:) s
52.2 202 M
(        | '%'  -> executebinop thestack Bigint.rem) s
25.8 190 M (43:) s
52.2 190 M
(        | '^'  -> executebinop thestack Bigint.pow) s
25.8 178 M (44:) s
52.2 178 M
(        | 'c'  -> Stack.clear thestack) s
25.8 166 M (45:) s
52.2 166 M
(        | 'd'  -> push \(Stack.top thestack\) thestack) s
25.8 154 M (46:) s
52.2 154 M
(        | 'f'  -> Stack.iter print_number thestack) s
25.8 142 M (47:) s
52.2 142 M
(        | 'l'  -> failwith "operator l scanned with no register") s
25.8 130 M (48:) s
52.2 130 M
(        | 'p'  -> print_number \(Stack.top thestack\)) s
25.8 118 M (49:) s
52.2 118 M
(        | 'q'  -> raise End_of_file) s
25.8 106 M (50:) s
52.2 106 M
(        | 's'  -> failwith "operator s scanned with no register") s
25.8 94 M (51:) s
52.2 94 M
(        | '\\n' -> \(\)) s
25.8 82 M (52:) s
52.2 82 M
(        | ' '  -> \(\)) s
25.8 70 M (53:) s
52.2 70 M
(        | _    -> printf "0%o is unimplemented\\n%!" \(ord oper\)) s
25.8 58 M (54:) s
52.2 58 M
(    with Stack.Empty -> print_stackempty\(\)) s
_R
S
%%Page: (2) 5
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (maindc.ml) def
/fdir (.) def
/ftail (maindc.ml) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (10/16/18) def
/pagecountstr (/2) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (55:) s
25.8 682 M (56:) s
52.2 682 M
(let toploop \(thestack: stack_t\) inputchannel =) s
25.8 670 M (57:) s
52.2 670 M
(    let scanbuf = Lexing.from_channel inputchannel in) s
25.8 658 M (58:) s
52.2 658 M
(    let rec toploop \(\) = ) s
25.8 646 M (59:) s
52.2 646 M
(        try  let nexttoken = Scanner.scanner scanbuf) s
25.8 634 M (60:) s
52.2 634 M
(             in  \(match nexttoken with) s
25.8 622 M (61:) s
52.2 622 M
(                 | Number number       -> push number thestack) s
25.8 610 M (62:) s
52.2 610 M
(                 | Regoper \(oper, reg\) -> executereg thestack oper reg) s
25.8 598 M (63:) s
52.2 598 M
(                 | Operator oper       -> execute thestack oper) s
25.8 586 M (64:) s
52.2 586 M
(                 \);) s
25.8 574 M (65:) s
52.2 574 M
(             toploop \(\)) s
25.8 562 M (66:) s
52.2 562 M
(        with End_of_file -> printf "End_of_file\\n%!";) s
25.8 550 M (67:) s
52.2 550 M
(    in  toploop \(\)) s
25.8 538 M (68:) s
25.8 526 M (69:) s
52.2 526 M
(let readfiles \(\) =) s
25.8 514 M (70:) s
52.2 514 M
(    let thestack : bigint Stack.t = Stack.create \(\)) s
25.8 502 M (71:) s
52.2 502 M
(    in  \(\(if Array.length Sys.argv > 1 ) s
25.8 490 M (72:) s
52.2 490 M
(         then try  let thefile = open_in Sys.argv.\(1\)) s
25.8 478 M (73:) s
52.2 478 M
(                   in  toploop thestack thefile) s
25.8 466 M (74:) s
52.2 466 M
(              with Sys_error message -> \() s
25.8 454 M (75:) s
52.2 454 M
(                   printf "%s: %s\\n%!" Sys.argv.\(0\) message;) s
25.8 442 M (76:) s
52.2 442 M
(                   exit 1\)\);) s
25.8 430 M (77:) s
52.2 430 M
(        toploop thestack stdin\)) s
25.8 418 M (78:) s
25.8 406 M (79:) s
52.2 406 M
(let interact \(\) =) s
25.8 394 M (80:) s
52.2 394 M
(    let thestack : bigint Stack.t = Stack.create \(\)) s
25.8 382 M (81:) s
52.2 382 M
(    in  toploop thestack stdin) s
25.8 370 M (82:) s
25.8 358 M (83:) s
52.2 358 M
(let _ = if not !Sys.interactive then readfiles \(\)) s
25.8 346 M (84:) s
_R
S
%%Page: (1) 6
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (scanner.mll) def
/fdir (.) def
/ftail (scanner.mll) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/16/18) def
/pagecountstr (/1) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(\(* $Id: scanner.mll,v 1.1 2011-04-26 13:39:18-07 - - $ *\)) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
({) s
32.4 658 M (4:) s
32.4 646 M (5:) s
52.2 646 M
(module Scanner = struct) s
32.4 634 M (6:) s
52.2 634 M
(    include Bigint) s
32.4 622 M (7:) s
32.4 610 M (8:) s
52.2 610 M
(    type token = Number   of Bigint.bigint) s
32.4 598 M (9:) s
52.2 598 M
(               | Regoper  of char * int) s
25.8 586 M (10:) s
52.2 586 M
(               | Operator of char) s
25.8 574 M (11:) s
25.8 562 M (12:) s
52.2 562 M
(    let bigstr = Bigint.bigint_of_string) s
25.8 550 M (13:) s
52.2 550 M
(    let lexeme = Lexing.lexeme) s
25.8 538 M (14:) s
52.2 538 M
(    let ord    = int_of_char) s
25.8 526 M (15:) s
52.2 526 M
(    let strlen = String.length) s
25.8 514 M (16:) s
25.8 502 M (17:) s
52.2 502 M
(    let regoper lexbuf =) s
25.8 490 M (18:) s
52.2 490 M
(        let token = lexeme lexbuf) s
25.8 478 M (19:) s
52.2 478 M
(        in  Regoper \(token.[0], ord token.[1]\)) s
25.8 466 M (20:) s
25.8 454 M (21:) s
52.2 454 M
(}) s
25.8 442 M (22:) s
25.8 430 M (23:) s
52.2 430 M
(let number  = '_'? ['0' - '9']*) s
25.8 418 M (24:) s
52.2 418 M
(let regoper = ['s' 'l']) s
25.8 406 M (25:) s
25.8 394 M (26:) s
52.2 394 M
(rule scanner = parse) s
25.8 382 M (27:) s
52.2 382 M
(   | number    { Number \(bigstr \(lexeme lexbuf\)\) }) s
25.8 370 M (28:) s
52.2 370 M
(   | regoper _ { regoper lexbuf }) s
25.8 358 M (29:) s
52.2 358 M
(   | _         { Operator \(lexeme lexbuf\).[0] }) s
25.8 346 M (30:) s
52.2 346 M
(   | eof       { raise End_of_file }) s
25.8 334 M (31:) s
25.8 322 M (32:) s
52.2 322 M
({) s
25.8 310 M (33:) s
25.8 298 M (34:) s
52.2 298 M
(end) s
25.8 286 M (35:) s
25.8 274 M (36:) s
52.2 274 M
(}) s
_R
S
%%Page: (1) 7
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (dc.ml) def
/fdir (.) def
/ftail (dc.ml) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/16/18) def
/pagecountstr (/1) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(\(* $Id: dc.ml,v 1.1 2011-04-26 13:39:18-07 - - $ *\)) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(\(*) s
32.4 658 M (4:) s
52.2 658 M
(* This file is useless for compilation.  However, for interactive) s
32.4 646 M (5:) s
52.2 646 M
(* testing it make loading all three files easier.  Normally for) s
32.4 634 M (6:) s
52.2 634 M
(* interactive use, type) s
32.4 622 M (7:) s
52.2 622 M
(*) s
32.4 610 M (8:) s
52.2 610 M
(*    #use "dc.ml";;) s
32.4 598 M (9:) s
52.2 598 M
(*) s
25.8 586 M (10:) s
52.2 586 M
(* at the toplevel.  Alternately, to run it directly without) s
25.8 574 M (11:) s
52.2 574 M
(* interacting with the toplevel, just use:) s
25.8 562 M (12:) s
52.2 562 M
(*) s
25.8 550 M (13:) s
52.2 550 M
(*    ocaml dc.ml) s
25.8 538 M (14:) s
52.2 538 M
(*) s
25.8 526 M (15:) s
52.2 526 M
(* which will run the program without need for compilation.) s
25.8 514 M (16:) s
52.2 514 M
(*\)) s
25.8 502 M (17:) s
25.8 490 M (18:) s
52.2 490 M
(#use "bigint.ml";;) s
25.8 478 M (19:) s
52.2 478 M
(#use "scanner.ml";;) s
25.8 466 M (20:) s
52.2 466 M
(#use "maindc.ml";;) s
25.8 454 M (21:) s
_R
S
%%Page: (1) 8
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (Makefile) def
/fdir (.) def
/ftail (Makefile) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/16/18) def
/pagecountstr (/1) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(# $Id: Makefile,v 1.19 2018-04-19 14:58:55-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(DEPSFILE  = Makefile.deps) s
32.4 658 M (4:) s
52.2 658 M
(NOINCLUDE = ci clean spotless) s
32.4 646 M (5:) s
52.2 646 M
(NEEDINCL  = ${filter ${NOINCLUDE}, ${MAKECMDGOALS}}) s
32.4 634 M (6:) s
52.2 634 M
(SOURCE    = bigint.mli bigint.ml maindc.ml scanner.mll) s
32.4 622 M (7:) s
52.2 622 M
(ALLSRC    = ${SOURCE} dc.ml Makefile) s
32.4 610 M (8:) s
52.2 610 M
(OBJCMI    = bigint.cmi scanner.cmi) s
32.4 598 M (9:) s
52.2 598 M
(MAINCMI   = maindc.cmi) s
25.8 586 M (10:) s
52.2 586 M
(OBJCMO    = ${OBJCMI:.cmi=.cmo} maindc.cmo) s
25.8 574 M (11:) s
52.2 574 M
(CAMLRUN   = ocamldc) s
25.8 562 M (12:) s
52.2 562 M
(LISTING   = Listing.ps) s
25.8 550 M (13:) s
25.8 538 M (14:) s
52.2 538 M
(all : ${CAMLRUN}) s
25.8 526 M (15:) s
25.8 514 M (16:) s
52.2 514 M
(${CAMLRUN} : ${OBJCMI} ${OBJCMO}) s
25.8 502 M (17:) s
52.2 502 M
(        ocamlc ${OBJCMO} -o ${CAMLRUN}) s
25.8 490 M (18:) s
25.8 478 M (19:) s
52.2 478 M
(%.cmi : %.mli) s
25.8 466 M (20:) s
52.2 466 M
(        - checksource $<) s
25.8 454 M (21:) s
52.2 454 M
(        ocamlc -c $<) s
25.8 442 M (22:) s
25.8 430 M (23:) s
52.2 430 M
(%.cmo : %.ml) s
25.8 418 M (24:) s
52.2 418 M
(        - checksource $<) s
25.8 406 M (25:) s
52.2 406 M
(        ocamlc -c $<) s
25.8 394 M (26:) s
25.8 382 M (27:) s
52.2 382 M
(scanner.cmi scanner.cmo scanner.ml : scanner.mll) s
25.8 370 M (28:) s
52.2 370 M
(        - checksource $<) s
25.8 358 M (29:) s
52.2 358 M
(        ocamllex $<) s
25.8 346 M (30:) s
52.2 346 M
(        ocamlc -c scanner.ml) s
25.8 334 M (31:) s
25.8 322 M (32:) s
52.2 322 M
(clean :) s
25.8 310 M (33:) s
52.2 310 M
(        - rm ${OBJCMO} ${OBJCMI} ${MAINCMI} ${DEPSFILE} scanner.ml) s
25.8 298 M (34:) s
25.8 286 M (35:) s
52.2 286 M
(spotless : clean) s
25.8 274 M (36:) s
52.2 274 M
(        - rm ${CAMLRUN} ${LISTING} ${LISTING:.ps=.pdf}) s
25.8 262 M (37:) s
25.8 250 M (38:) s
52.2 250 M
(ci : ${RCSFILES}) s
25.8 238 M (39:) s
52.2 238 M
(        - checksource ${ALLSRC}) s
25.8 226 M (40:) s
52.2 226 M
(        cid + ${ALLSRC}) s
25.8 214 M (41:) s
25.8 202 M (42:) s
52.2 202 M
(deps : ${SOURCE}) s
25.8 190 M (43:) s
52.2 190 M
(        ocamldep ${SOURCE} >${DEPSFILE}) s
25.8 178 M (44:) s
25.8 166 M (45:) s
52.2 166 M
(${DEPSFILE} :) s
25.8 154 M (46:) s
52.2 154 M
(        @ touch ${DEPSFILE}) s
25.8 142 M (47:) s
52.2 142 M
(        make --no-print-directory deps) s
25.8 130 M (48:) s
25.8 118 M (49:) s
52.2 118 M
(lis : ${ALLSRC}) s
25.8 106 M (50:) s
52.2 106 M
(        mkpspdf ${LISTING} ${ALLSRC} ${DEPSFILE}) s
25.8 94 M (51:) s
25.8 82 M (52:) s
52.2 82 M
(again :) s
25.8 70 M (53:) s
52.2 70 M
(        make --no-print-directory spotless ci deps all lis) s
25.8 58 M (54:) s
25.8 46 M (55:) s
52.2 46 M
(ifeq \(${NEEDINCL}, \)) s
25.8 34 M (56:) s
52.2 34 M
(include ${DEPSFILE}) s
25.8 22 M (57:) s
52.2 22 M
(endif) s
25.8 10 M (58:) s
_R
S
%%Page: (1) 9
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (Makefile.deps) def
/fdir (.) def
/ftail (Makefile.deps) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (10/16/18) def
/pagecountstr (/1) def
/modtimestr (14:00:40) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Assignments/asg2-ocaml-dc/code/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(bigint.cmi :) s
32.4 682 M (2:) s
52.2 682 M
(bigint.cmo : bigint.cmi) s
32.4 670 M (3:) s
52.2 670 M
(bigint.cmx : bigint.cmi) s
32.4 658 M (4:) s
52.2 658 M
(maindc.cmo : bigint.cmi) s
32.4 646 M (5:) s
52.2 646 M
(maindc.cmx : bigint.cmx) s
_R
S
%%Trailer
%%Pages: 9
%%DocumentNeededResources: font Times-Roman Courier-Bold Times-Bold 
%%EOF
