%!PS-Adobe-3.0
%%Creator: groff version 1.22.2
%%CreationDate: Tue Oct 16 13:56:45 2018
%%Title: asg2-ocaml-dc.ps
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font NewCenturySchlbk-Bold
%%+ font NewCenturySchlbk-Roman
%%+ font NewCenturySchlbk-BoldItalic
%%+ font Symbol
%%DocumentSuppliedResources: procset grops 1.22 2
%%+ font Courier-Elite-Bold
%%+ font Courier-Elite
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 2
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font NewCenturySchlbk-Bold
%%IncludeResource: font NewCenturySchlbk-Roman
%%IncludeResource: font NewCenturySchlbk-BoldItalic
%%IncludeResource: font Symbol
%%BeginResource: font Courier-Elite-Bold
%%DocumentNeededResources: font Courier-Bold
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Elite-Bold
[ .833333333 0 0 1 0 0 ]
/Courier-Bold
MakeTransformedFont
%%EndResource
%%BeginResource: font Courier-Elite
%%DocumentNeededResources: font Courier
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Elite
[ .833333333 0 0 1 0 0 ]
/Courier
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/NewCenturySchlbk-BoldItalic@0 ENC0/NewCenturySchlbk-BoldItalic RE
/Courier-Elite-Bold@0 ENC0/Courier-Elite-Bold RE/Courier-Elite@0 ENC0
/Courier-Elite RE/NewCenturySchlbk-Roman@0 ENC0/NewCenturySchlbk-Roman
RE/NewCenturySchlbk-Bold@0 ENC0/NewCenturySchlbk-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-112 \203 F)72 50 Q
(all 2018 \203 Program 2 \203 Functionally Ocaml)-.888 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(1o)89.412 G 3.336(f2)-3.336 G/F2 11
/Courier-Elite@0 SF
($Id: asg2-ocaml-dc.mm,v 1.30 2018-10-16 13:56:44-07 - - $)72 67 Q
(PWD: /afs/cats.ucsc.edu/courses/cmps112-wm/Assignments/asg2-ocaml-dc)72
80 Q(URL: http://www2.ucsc.edu/courses/cmps112-wm/:/Assignments/asg2-oc\
aml-dc/)72 93 Q F0 3.444(1. Overview)72 117 R F1 .283(In this assignmen\
t, you will implement a desk calculator in Ocaml, a language with)72 137
R .004(strong static type c)72 151 R(hec)-.084 E(king)-.084 E 6.676(.Y)
-.3 G .004(our program will be a strict subset of)-7.876 F/F3 12
/Courier-Elite-Bold@0 SF(dc)3.341 E F1 .005(\(1\), although it)B .009
(will not ha)72 165 R .009(ve all of its functions)-.12 F 6.681(.B)-.3 G
.009(egin by reading the man page for)-6.681 F F3(dc)3.345 E F1 .009
(\(1\) and exper)B(-)-.444 E 1.446(imenting with it.)72 179 R 1.446
(Study its input format, output format, error messages)8.118 F 4.782(,a)
-.3 G 1.446(nd exit)-4.782 F(status)72 193 Q(.)-.3 E -1.2(Yo)72 213 S
.967(ur program will read the single \214le \(if speci\214ed\) as does)
1.2 F F3(dc)4.302 E F1 .966(and then read)4.302 F F3(stdin)4.302 E F1(.)
A .897(Implement the following)72 227 R F3(dc)4.233 E F1 -1.336
(functions :)4.233 F F3 6.898(+-*/%\000cdflps)7.57 G F1 7.57(.N)-6.898 G
.898(ote that all of)-7.57 F(these letters are lower case)72 241 Q(.)
-.216 E F0 3.444(2. Implementation)72 267 R(Notes)3.444 E F1 2.664
(\(1\) Y)81.336 287 R(ou)-1.2 E/F4 12/NewCenturySchlbk-BoldItalic@0 SF
(ma)4.813 E 4.921(yn)-.096 G 1.477(ot use)-4.921 F F1(the)4.813 E F3
(Num)4.813 E F1(or)4.813 E F3(Big_int)4.813 E F1 1.477
(modules in the Ocaml library)4.813 F 8.148(.I)-1.5 G(nstead,)-8.148 E
.492(you will implement your own version of bigint by representing an i\
nteger by a)102 301 R(product of a sign with a list of integers)102 315
Q 6.672(.T)-.3 G(he largest value of int in Ocaml is)-6.672 E
(4611686018427387903 = 0x3FFFFFFFFFFFFFFF = 2)154.504 329.762 Q/F5 8.4
/NewCenturySchlbk-Roman@0 SF(62)-5.04 I/F6 12/Symbol SF(-)3.24 5.04 M F1
(1,)2.64 E(whic)102 343.762 Q 4.927(hi)-.084 G 4.927(so)-4.927 G 1.591
(ne bit less than what you might normally expect.)-4.927 F 1.59
(This is because)8.262 F(one bit is used in eac)102 357.762 Q 3.336(hw)
-.084 G(ord for tagging)-3.336 E(.)-.3 E 2.664(\(2\) The)81.336 377.762
R 1.875(ideal representation therefore would be to use eight-digit numb\
ers in a)5.211 F 4.636(list. However)102 391.762 R 4.636(,i)-1.2 G 4.636
(no)-4.636 G 1.299(rder to make sure that the lists are working)-4.636 F
4.635(,w)-.3 G(hic)-4.635 E 4.635(hi)-.084 G 4.635(st)-4.635 G(he)-4.635
E .683(point of the assignment, you can store only one digit in eac)102
405.762 R 4.019(he)-.084 G .684(lement of a list.)-4.019 F 1.593
(This is incredibly w)102 419.762 R 1.593(asteful of storage)-.216 F
4.928(,b)-.216 G 1.592(ut possible makes the representation)-4.928 F
(easier)102 433.762 Q 8.288(.T)-1.2 G(he)-8.288 E F3(dc)4.952 E F1 1.617
(utility actually uses c)4.952 F 1.617(haracter arra)-.084 F 1.617
(ys with two decimal digits)-.12 F(per byte)102 447.762 Q(.)-.216 E
2.664(\(3\) Since)81.336 467.762 R .443(arithmetic operations proceed f\
rom the lowest order digit to the highest,)3.779 F .522(represent your \
numbers with the lowest order digit at the front of the list and)102
481.762 R(the leftmost digit at the end.)102 495.762 Q(\(4\))81.336
515.762 Q F4 .468(Do not)6 F F1 .467(use any loops in your program.)
3.804 F .467(All iteration should be done via recur)7.139 F(-)-.444 E
(sion, and whenever possible)102 529.762 Q 3.336(,b)-.216 G 3.336(yu)
-3.336 G(sing higher)-3.336 E(-order functions like map)-.444 E(.)-.216
E 2.664(\(5\) F)81.336 549.762 R 1.025
(irst implement input and output of numbers)-.12 F 7.698(.M)-.3 G 1.026
(ake sure your output dupli-)-7.698 F(cates)102 563.762 Q F3(dc)4.193 E
F1 .857(for very large numbers)4.193 F 7.529(.N)-.3 G .857
(ote that an underscore pre\214xing a number)-7.529 F(makes it negative)
102 577.762 Q 6.672(.T)-.216 G
(he minus sign is strictly for subtraction.)-6.672 E 2.664(\(6\) Next,)
81.336 597.762 R .482(implement addition and subtraction.)3.818 F 1.802
-.66(To d)7.154 H 3.818(ot).66 G(his)-3.818 E 3.818(,y)-.3 G .482
(ou will need two func-)-3.818 F(tions)102 611.762 Q F3(add)3.399 E F1
(and)3.399 E F3(sub)3.399 E F1(whic)3.399 E 3.399(hj)-.084 G .062
(ust compare signs and then call)-3.399 F F3(add')3.398 E F1(or)3.398 E
F3(sub')3.398 E F1 .062(as appro-)3.398 F .48
(priate to do the work on their absolute values)102 625.762 R 7.152(.W)
-.3 G .48(hen you subtract, make sure)-7.152 F
(that the \214rst argument is alw)102 639.762 Q -.12(ay)-.216 G 3.336
(st).12 G(he larger one)-3.336 E(.)-.216 E 2.664(\(7\) Y)81.336 659.762
R 1.823(ou will need a function)-1.2 F F3(cmp)5.158 E F1(whic)5.158 E
5.158(hr)-.084 G 1.822(eturns a comparison value in the same)-5.158 F
-3.024 -.216(wa y)102 673.762 T .837(as does)4.389 F F3(strcmp)4.173 E
F1 .837(in C)4.173 F 7.509(.T)-.444 G .837
(his can move from the low order digits to the high)-7.509 F .486(order\
 digits tail recursively and stop at the end of the shorter list, or by\
 main-)102 687.762 R 2.952(taining an actual comparison when the two li\
sts turn out to be the same)102 701.762 R(length.)102 715.762 Q 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-112 \203 F)72 50 Q
(all 2018 \203 Program 2 \203 Functionally Ocaml)-.888 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(2o)89.412 G 3.336(f2)-3.336 G 2.664
(\(8\) Make)81.336 74 R 1.864(sure that you alw)5.2 F -.12(ay)-.216 G
5.199(sc).12 G 1.863(anonicalize your answers by deleting leading 0)
-5.199 F(digits)102 88 Q 7.116(.T)-.3 G .444(his is only an issue with \
absolute subtraction, since addition can only)-7.116 F .874
(lengthen the number)102 102 R 7.546(.A)-1.2 G .874
(ll other operations are implemented in terms of addi-)-7.546 F
(tion and subtraction.)102 116 Q 2.664(\(9\) T)81.336 136 R 5.308(oi)
-.66 G 1.973(mplement multiplication, you add appropriate elements of t\
he right col-)-5.308 F 3.675(umn. T)102 150 R 3.675(oi)-.66 G .338
(mplement division, you add appropriate elements of the left column.)
-3.675 F .34(The remainder is just whatever is left over after \214nish\
ing the division, so your)102 164 R .051
(division function should return two results as a tuple)102 178 R 3.387
(,n)-.216 G .051(amely the quotient and)-3.387 F(remainder)102 192 Q
3.336(,a)-1.2 G(nd the main module then ignores the one not w)-3.336 E
(anted.)-.216 E 2.664(\(10\) Exponentiation)74.664 212 R .327
(will then be trivial, since it is a simple matter to call the other)
3.663 F(functions)102 226 Q(.)-.3 E F0 3.444(3. Interactive)72 252 R
(Use)3.444 E F1(As with some other languages)72 272 Q(,)-.3 E/F2 12
/Courier-Elite-Bold@0 SF(ocaml)3.336 E F1
(can be used interactively for testing purposes)3.336 E(:)2 E/F3 12
/Courier-Elite@0 SF(-bash-1$)85.5 286 Q F2(rlwrap ocaml)6 E F3
(OCaml version 4.02.1)133.5 300 Q(#)85.5 314 Q F2(let f x y = x + y;;)6
E F3(val f : int -> int -> int = <fun>)85.5 328 Q(#)85.5 342 Q F2 6(f3)6
G(;;)-6 E F3 6(-:i)85.5 356 S(nt -> int = <fun>)-6 E(#)85.5 370 Q F2 6
(f34)6 G(;;)-6 E F3 6(-:i)85.5 384 S(nt = 7)-6 E(#)85.5 398 Q F2<0044>6
E F1 -1.2(Yo)72 412 S 3.336(uw)1.2 G(ill, of course)-3.336 E 3.336(,n)
-.216 G(eed to add it to your)-3.336 E F2($PATH)3.336 E F1(:)2 E F3
(-bash-2$)85.5 426 Q F2(which ocaml)6 E F3
(/afs/cats.ucsc.edu/courses/cmps112-wm/usr/ocaml/bin/ocaml)85.5 440 Q F1
(The following should be placed in your \214le)72 454 Q F2
(\001/.bash_profile)3.336 E F1(:)2 E F2
(export PATH=$PATH:/afs/cats.ucsc.edu/courses/cmps112-wm/usr/ocaml/bin)
85.5 468 Q F1(Unfortunately)72 482 Q 3.467(,w)-1.5 G .131
(hile interacting with)-3.467 F F2(ocaml)3.466 E F1 3.466(,t)C .13
(he up arrow can not be used to recover)-3.466 F 1.102(earlier lines)72
496 R 7.774(.U)-.3 G 1.102(sing it just causes)-7.774 F F2(ocaml)4.438 E
F1 1.102(to print)4.438 F F2(\000[[A)4.438 E F1 7.775(.T)C 4.439(og)
-8.435 G 1.103(et around this)-4.439 F 4.439(,y)-.3 G 1.103(ou can)
-4.439 F(use)72 510 Q F2(rlwrap)3.336 E F1 3.336(,a)C 3.336(si)-3.336 G
(n)-3.336 E F3(-bash-3$)85.5 524 Q F2(rlwrap ocaml)6 E F1
(Then you can use the arrow keys to na)72 538 Q(vigate)-.12 E(.)-.216 E
F0 3.444(4. What)72 564 R(to Submit)3.444 E F2(Makefile)72 584 Q F1(,)A
F2(bigint.ml)4.413 E F1(,)A F2(bigint.mli)4.413 E F1(,)A F2(maindc.ml)
4.413 E F1 4.413(,a)C(nd)-4.413 E F2(scanner.mll)4.413 E F1 7.749(.N)C
1.077(ote that)-7.749 F F2(scanner.ml)4.413 E F1 .838
(is a generated \214le and should be made by the)72 598 R F2(Makefile)
4.175 E F1 7.511(.A)C(lso)-7.511 E(,)-.216 E F2(dc.ml)4.175 E F1 .839
(is a debugging)4.175 F .239(tool, not to be submitted.)72 612 R -.66
(Te)6.91 G .238(sting will be done on the).66 F F2(ocamlrun)3.574 E F1
(script)3.574 E F2(ocamldc)3.574 E F1 3.574(,w)C(hic)-3.574 E(h)-.084 E
(should be runnable from the commandline)72 626 Q(.)-.216 E .855
(Program testing)72 646 R 7.527(:T)2 G .855(est data will be fed to)
-8.187 F F2(dc)4.191 E F1 .855(\(1\) as well as to your program and the)
B(output will be c)72 660 Q(hec)-.084 E(ked with)-.084 E F2(diff)3.336 E
F1(\(1\).)A 0 Cg EP
%%Trailer
end
%%EOF
